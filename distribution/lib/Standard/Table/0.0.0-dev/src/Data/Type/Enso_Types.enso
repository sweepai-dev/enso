from Standard.Base import all

import project.Data.Type.Value_Type.Value_Type
import project.Data.Type.Value_Type.Bits

## PRIVATE
   Finds the most specific `Value_Type` that can be used to hold the given
   value.

   This method will still prefer default types used in the in-memory backend, so
   for integers it will return 64-bit integers even if the value could fit in a
   smaller one; and for Text values variable-length text will be preferred over
   fixed-length.

   TODO [RW]: Add `use_smallest` flag to allow for smaller types to be used.

   TODO: once we add Enso Native Object Type Value Type, we probably want to prefer it over Mixed
most_specific_value_type : Any -> Value_Type
most_specific_value_type value = case value of
    _ : Integer     -> Value_Type.Integer Bits.Bits_64
    _ : Decimal     -> Value_Type.Float Bits.Bits_64
    _ : Text        -> Value_Type.Char size=Nothing variable=True
    _ : Boolean     -> Value_Type.Boolean
    _ : Date        -> Value_Type.Date
    _ : Time_Of_Day -> Value_Type.Time
    _ : Date_Time   -> Value_Type.Date_Time
    _               -> Value_Type.Mixed
